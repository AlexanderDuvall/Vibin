# need foreign keys
# need tag table for hashtags
# need a way to add other user ids in song table that are featured in the song
#
ActiveRecord::Schema.define(version: 2019_07_06_194353) do

create_table "users", id: :integer, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
  t.string "email", unique: true
  t.string "username", limit: 20
  t.string "name", limit: 30
  t.string "password_digest"
  t.string "city" ------------
  t.string "state"-------------
  t.mediumint "zipcode"-------------
  t.string "gender"
  t.string "bio", limit: 150
  t.date "birthday"
  t.boolean "Terms_of_Agreement", default: false
  t.string "remember_digest"
  t.string "activation_digest"
  t.boolean "activated", default: false
  t.datetime "activated_at"
  t.string "reset_digest"
  t.datetime "reset_sent_at"
  t.boolean "email_confirmed", default: false
  t.string "confirm_token"
  t.boolean "Verified", default: false
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
end

create_table "posts", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
  t.text "content" ---- rename from context
  t.integer "user_id" ------------- data type
  t.integer "post_id"
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
  t.index ["user_id"], name: "index_posts_on_user_id"
  --- remove index name: "index_posts_on_user_id_and_created_at"
end

create_table "comments", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
  t.integer "user_id"---------------------- change data type from bigint
  t.text "comment"
  t.integer "post_id"------------------ change data type from bigint
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
  t.index ["post_id", "user_id"], name: "index_comments_on_post_id_and_user_id"
  t.index ["post_id"], name: "index_comments_on_post_id"
  t.index ["user_id"], name: "index_comments_on_user_id"
end

create_table "songs", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
  t.integer "user_id"
  t.string "title"
  t.string "text"
  t.string "genre"
  t.integer "plays"
  t.boolean "premium", default: false
  t.integer "album_id"
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
  t.index ["album_id"], name: "index_songs_on_album_id"
  t.index ["user_id"], name: "index_songs_on_user_id"
------ remove song_path, users_id
end

create_table "cloutsongs", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  t.integer "song_id"
  t.integer "remainingDays"
  t.integer "Payment"
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
  t.index ["song_id"], name: "index_songs_on_song_id"
end

create_table "messages", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
  t.integer "user_id"
  t.text "content"
  t.integer "receiver_id" ---- rename from reciever
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
  t.index ["user_id"], name: "index_messages_on_user_id"
  t.index ["receiver_id"], name: "index_messages_on_receiver_id"
end

  create_table "broadcasters", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.integer "user_id"
    t.string "broadcast_key"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_broadcasters_on_user_id"
  end

  create_table "likes", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.integer "user_id"
    t.integer "post_id"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_likes_on_user_id" -----
    t.index ["post_id"], name: "index_likes_on_post_id" -----
  end

  create_table "songlikes", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
  #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^renamed
    t.integer "user_id"
    t.integer "song_id"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_songlikes_on_user_id" ------
    t.index ["song_id"], name: "index_songlikes_on_song_id" -------
  end

  create_table "playlists", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.string "title"
    t.integer "user_id"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_playlists_on_user_id"
  end

  create_table "song_positions", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.integer "position"
    t.integer "playlist_id"
    t.index ["playlist_id"], name: "index_song_positions_on_playlist_id"
    t.integer "song_id"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["song_id"], name: "index_song_positions_on_song_id"
  end

   create_table "playlistlikes", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
     #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     t.integer "playlist_id"
     t.integer "user_id"
     t.index ["users_id"], name: "index_playlistlikes_on_users_id"
     t.index ["users_id"], name: "index_playlistlikes_on_playlist_id"
   end

  create_table "relationships", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.integer "follower_id"
    t.integer "followed_id"
    t.boolean "blocked"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["followed_id"], name: "index_relationships_on_followed_id"
    t.index ["follower_id"], name: "index_relationships_on_follower_id"
    t.index ["follower_id", "followed_id"], name: "index_relationships_on_follower_id_and_followed_id", unique: true
  end

  create_table "user_artist_play_counter", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.integer "user_id", null: false
    t.integer "artist_id", null: false
    t.integer "plays"
    t.index ["artist_id"], name: "index_user_artist_play_counters_on_artist_id"
    t.index ["user_id"], name: "index_user_artist_play_counters_on_user_id"
    t.index ["user_id", "artist_id"], name: "index_user_artist_play_counters_on_user_id_and_artist_id", unique: true
  end

  create_table "user_song_play_counter", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.integer "user_id", null: false
    t.integer "song_id", null: false
    t.integer "plays"
    t.index ["user_id"], name: "index_user_song_play_counters_on_user_id"
    t.index ["song_id"], name: "index_user_song_play_counters_on_song_id"
    t.index ["user_id", "song_id"], name: "index_user_song_play_counters_on_user_id_and_song_id", unique: true
  end

  create_table "active_storage_attachments", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.string "name", null: false
    t.string "record_type", null: false
    t.bigint "record_id", null: false
    t.bigint "blob_id", null: false
    t.datetime "created_at", null: false
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
  end

  create_table "active_storage_blobs", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|
    t.string "key", null: false
    t.string "filename", null: false
    t.string "content_type"
    t.text "metadata"
    t.bigint "byte_size", null: false
    t.string "checksum", null: false
    t.datetime "created_at", null: false
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
  end

  add_foreign_key "posts", "users"
  add_foreign_key "songs", "users"
  add_foreign_key "messages", "users"
  add_foreign_key "likes", "posts"
  add_foreign_key "likes", "users"
  add_foreign_key "songlikes", "songs"
  add_foreign_key "songlikes", "users"
  add_foreign_key "user_song_play_counter", "users"
  add_foreign_key "user_song_play_counter", "songs"
  add_foreign_key "user_artist_play_counter", "users"
  add_foreign_key "user_artist_play_counter", "songs"
  add_foreign_key "broadcasters", "users"
  add_foreign_key "playlists", "users"
  add_foreign_key "playlistlikes", "users"
  add_foreign_key "playlistlikes", "playlists"
  add_foreign_key "song_positions", "playlists"
  add_foreign_key  "playlists", "songs"
  add_foreign_key "cloutsongs" "song_id"
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"

end
