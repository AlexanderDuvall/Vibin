<%= form_with(model: @newPost, multipart: true, :html => {:style => 'width: 100%;'}) do |f| %>
  <div hidden class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel">Post</h5>
  </div>
  <div class="row" style="justify-content: end;">
    <div class="col-1" style="margin-right: 20px; margin-top: 2px;">
      <span class="CancelPostModal" id="cancelPostModal"> X</span>
    </div>
  </div>
  <div class="row justify-content-center" style="margin: 10px 10px 10px 10px;">
    <div class="" style=" width:min-content; display: flex;">
      <img src="default-avatar.jpg" class="PostFormUserAva">
    </div>
    <div class="col-9" style="margin-top: 8px;">
      <%= f.text_area :content, class: "PostFormText", rows: 1, placeholder: "Text", id: "post_content" %>
    </div>
  </div>
  <div class="row justify-content-center" id="previewImages">
  </div>
  <div class="container justify-content-center" style="display: flex;" id="previewSongs">

  </div>
  <input hidden class="photo_upload" id="images" type="file" multiple="true" accept="image/jpeg, image/tiff, image/png">
  <div class="row justify-content-end" style="margin-top: 9px;">
    <div class="col-2">
      <button class="PostFormButton" id="imageUploader">
        <%= image_tag "PictureUploadButton.png", style: "height:30px; width:30px;" %>
      </button>
    </div>
    <div class="col-2">
      <button class="PostFormButton" id='songUploader'>
        <%= image_tag "MusicButton.png", style: "height:30px; width:30px;" %>
      </button>
    </div>
    <input hidden class="" name="post[songs][]" id="songs" type="file" multiple="true" accept="audio/*">
    <div class="col-3">
      <button class="PostFormSubmitButton" id="submitt" onclick=submitPost($(".PostFormText").val())>
        Submish
      </button>
    </div>
  </div>
<% end %>

<script>
    function submitPost(content) {
        var form = new FormData();
        form.append("content",content);
        console.log("content:" + content.toString());
        console.log("helios" + typeof tmp_files);
        for(var i = 0; i < imagesCount; i++){
            form.append("images[]", tmp_files[i]);
        }

        Rails.ajax({
            type: "POST",
            url: "/newPost?",
            data: form,
            processData: false,
            contentType: false,
            success: function (data, textStatus, xhr) {
                console.log("supposedly worked");
            },
            error: function (data) {
                console.log("error " + data);
            }
        });
    }

    var imagesCount = 0;
    var tmp_files = new Array();
    window.addEventListener('DOMContentLoaded', function () {
        document.getElementById("cancelPostModal").addEventListener("click", function () {
            document.getElementById("post_content").value = "";
            if (document.getElementById("previewImages").contains(document.getElementById('images1'))) {
                document.getElementById("previewImages").removeChild(document.getElementById("images1"));
            }
            console.log("closed");
        });
        document.getElementById("post_content").addEventListener("onkeypress", function (event) {
            console.log("ds");
        });
        document.getElementById("imageUploader").addEventListener("click", function (event) {
            event.preventDefault();
            $("#images").trigger("click");
            event.preventDefault();
        });
        document.getElementById("songUploader").addEventListener("click", function (event) {
            event.preventDefault();
            $("#songs").trigger("click");
            event.preventDefault();
        });
        document.getElementById("submitt").addEventListener("click", function (event) {
            event.preventDefault();
        });
        var height;
        var width;
        var reader;
        var img;
        var resolution;
        var style;
        $("#images").change(function (event) {
            var files = document.getElementById("images").files;
            for (var i = 0; i < files.length; i++) {
                tmp_files.push(files[i]);
                img = new Image();
                reader = new FileReader();
                imagesCount +=1;
                console.log("tmp_files length: " + tmp_files.length);
                console.log("files length: " + files.length);
                console.log(files[i].name);
                console.log(files[i]);
                reader.readAsDataURL(files[i]); // convert to base64 string
                reader.onload = function (e) {
                    console.log(e);
                    img.src = e.target.result;
                    var col = document.createElement('div');
                    col.setAttribute('style', "flex-basis: 0; margin: 5px 8px 8px 5px;");
                    document.getElementById("previewImages").appendChild(col);
                    img.onload = function () {
                        width = this.width;
                        height = this.height;
                        console.log("width: " + width);
                        console.log("height: " + height);
                        resolution = width / height;
                        console.log("resolution: ", resolution);
                        if (resolution > 1) {
                            if (width > 500) {
                                width = 250;
                                height = width / resolution;
                            }
                        } else {
                            if (height > 500) {
                                height = 250;
                                width = height * resolution;
                            }
                        }
                        style = "height:" + height + "px; width: " + width + "px; display: inline-block;";
                        img.setAttribute("style", style);
                        console.log("pushedssss" + e.target.result)
                        var cancel = document.createElement("span");
                        cancel.setAttribute('style', "background-color: red; height: 30px; width: 30px; position: absolute;");
                        cancel.setAttribute("onclick", "removeImage(this)");
                        document.getElementById("previewImages").lastChild.appendChild(cancel);
                        document.getElementById("previewImages").lastChild.appendChild(img);
                    };
                }
            }
        });
        var audio;
        var songfiles = new Array();
        var songfile;
        var songCount = 0;
        var audioTag;
        var progressBar;
        var coverImage;
        var premiumCheckBox;
        var featuredArtistTextBox;
        var genreTagsTextBox;
        var titleTextBox;
        var addFeaturedArtistButton;
        var rowDiv;
        var col2;
        var col9;
        var col4;
        var earnMoney = document.createElement('p');
        earnMoney.setAttribute('style', 'font-size: 14px; display: inline;');
        var earnMoneyText = document.createTextNode("Earn Money ");
        earnMoney.appendChild(earnMoneyText);
        var earnMoneyHyperLink;
        var linkText = document.createTextNode("Learn More");
        var audioplayer;
        $("#songs").change(function (event) {
            var files = event.target.files;
            for(var i = 0; i < files.length; i++){
                songCount += 1;
                rowDiv = document.createElement('div');
                rowDiv.setAttribute('class', 'row');
                rowDiv.setAttribute('style', 'margin-left: -10px; width: 95%;');
                document.getElementById('previewSongs').appendChild(rowDiv);
                coverImage = document.createElement("img");
                coverImage.setAttribute('style', 'height: 100px; width: 100px;');
                coverImage.setAttribute("src", 'default-avatar.jpg');
                col2 = document.createElement('div');
               // col2.setAttribute('class', 'col-2');
                col2.setAttribute('style', 'width: 100px; flex: initial;');
                col2.appendChild(coverImage);
                rowDiv.appendChild(col2);
                titleTextBox = document.createElement('input');
                titleTextBox.setAttribute('style', 'height: 30px; width: 65%;');
                titleTextBox.setAttribute('placeholder', 'Title of Song');
                col9 = document.createElement('div');
                //col9.setAttribute('class', 'col-9');
                col9.setAttribute('style', 'margin-left: 5px; flex: 1; ');
                col9.appendChild(titleTextBox);
                rowDiv.appendChild(col9);
                //col4 = document.createElement('div');
                //col4.setAttribute('class', 'col-4');
                //rowDiv.appendChild(col4);
                premiumCheckBox = document.createElement('input');
                premiumCheckBox.setAttribute('type', 'checkbox');
                premiumCheckBox.setAttribute('style', 'margin-left: 5px; margin-right: 1px;');
                col9.appendChild(premiumCheckBox);
                col9.appendChild(earnMoney);
                earnMoneyHyperLink = document.createElement('a');
                earnMoneyHyperLink.appendChild(linkText);
                earnMoneyHyperLink.setAttribute('href', '');
                earnMoneyHyperLink.setAttribute("style", 'font-size: 13px;');
                col9.appendChild(earnMoneyHyperLink);


               /*
                audioplayer = document.createElement("audio");
                audioplayer.setAttribute("id", "player");
                audioplayer.setAttribute("style", "height: 20px; width: 100px;");
                titleTextBox = document.createElement("div");
                titleTextBox.setAttribute('class', 'row');
                titleTextBox.appendChild(coverDiv);
                document.getElementById('previewSongs').appendChild(titleTextBox);
                audio = document.createElement("source");
                document.getElementById("previewSongs").appendChild(audioplayer);
                audio.setAttribute("src", URL.createObjectURL(files[i]));
                document.getElementById("player").appendChild(audio);
                audioplayer.load();
                audioplayer.play();

                */
            }
           // var files = document.getElementById("songs").files;
           // for (var i = 0; i < files.length; i++) {
             //   songCount += 1;
               // songfile = event.target.files[0];
                //songfiles.push(files[i]);
                //audio = new Audio();
                //reader = new FileReader();
                //reader.readAsDataURL(files[i]);
                //reader.onload = function (e){
                    //audio.setAttribute('src', URL.createObjectURL(songfile));
                    //var col = document.createElement('div');
                    //col.setAttribute('style', "flex-basis: 0; margin: 5px 8px 8px 5px;");
                    //document.getElementById("previewSongs").appendChild(col);
                    //audio.onload = function () {
                       // document.getElementById("previewSongs").appendChild(audio);
                        ///audio.play();
                        //rowDiv = document.createElement("div");
                        //rowDiv.setAttribute('class', 'row justify-content-center');

                        //progressBar = document.createElement("progress");
                        //progressBar.setAttribute('id', 'progressBar');
                        //progressBar.setAttribute("value", "0");
                        //progressBar.setAttribute("max", "1");
                        //titleTextBox = document.createElement("input");
                        //titleTextBox.setAttribute('style', 'height: 30px; width: 100px;');
                        //document.getElementById('')
                        //document.getElementById("previewSongs").firstChild.appendChild(progressBar);
                        //audioTag.setAttribute("ontimeupdate", "initProgressBar()");
                        //document.getElementById("previewSongs").appendChild(audioTag);
                        //audioTag.setAttribute("ontimeupdate", "initProgressBar()");
                        //do
                        //document.getElementById("previewSongs").appendChild(audioTag);
                    //}
               // }

            });
        });

        var textarea = document.querySelector('textarea');

        textarea.addEventListener('keydown', autosize);

        function autosize() {
            var el = this;
            setTimeout(function () {
                el.style.cssText = 'height:auto;';
                // for box-sizing other than "content-box" use:
                // el.style.cssText = '-moz-box-sizing:content-box';
                el.style.cssText = 'height:' + (el.scrollHeight + 10) + 'px';
            }, 0);
        }

    function removeImage(i) {
        var col = i.parentNode;
        var colParent = col.parentNode;
        console.log(colParent);
        var colIndex = Array.prototype.indexOf.call(colParent.children, col);
        console.log(colIndex);
        imagesCount -= 1;
        tmp_files.splice(colIndex, 1);
        document.getElementById("previewImages").removeChild(col);
    }

    function initProgressBar(song) {
        var player = document.getElementById('player');
        var length = player.duration;
        var current_time = player.currentTime;

        // calculate total length of value
        var totalLength = calculateTotalValue(length);

        // calculate current value time
        var currentTime = calculateCurrentValue(current_time);

        var progressbar = document.getElementById('progressBar');
        progressbar.value = (player.currentTime / player.duration);
        progressbar.addEventListener("click", seek);


        function seek(event) {
            var percent = event.offsetX / this.offsetWidth;
            player.currentTime = percent * player.duration;
            progressbar.value = percent / 100;
        }
    }

    function calculateTotalValue(length) {
        var minutes = Math.floor(length / 60);
        var seconds_int = length - minutes * 60;
        var seconds_str = seconds_int.toString();
        var seconds = seconds_str.substr(0, 2);
        var time = minutes + ':' + seconds;

        return time;
    }

    function calculateCurrentValue(currentTime) {
        var current_hour = parseInt(currentTime / 3600) % 24;
        var current_minute = parseInt(currentTime / 60) % 60;
        var current_seconds_long = currentTime % 60;
        var current_seconds = current_seconds_long.toFixed();
        var current_time = (current_minute < 10 ? "0" + current_minute : current_minute) + ":" + (current_seconds < 10 ? "0" + current_seconds : current_seconds);

        return current_time;
    }
</script>
