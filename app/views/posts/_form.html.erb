<%= form_with(model: @newPost, multipart: true, :html => { :style => 'width: 100%;' }) do |f| %>
  <div hidden class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel">Post</h5>
    <% if @newPost.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@newPost.errors.count, "error") %> prohibited this post from being saved:</h2>
        <ul>
          <% post.errors.full_messages.each do |message| %>
            <% puts message %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
  </div>
  <div class="row" style="justify-content: end;">
    <div class="col-1"  style="margin-right: 20px; margin-top: 2px;">
      <span class="CancelPostModal" id="cancelPostModal"> X</span>
    </div>
  </div>
    <div class="row justify-content-center">
      <div class="col-2" style="text-align: center;">
        <img src="default-avatar.jpg" class="PostFormUserAva">
      </div>
      <div class="col-9" style="margin-top: 8px;">
        <%= f.text_area :content, class: "PostFormText", rows: 1, placeholder: "Text", id: "post_content" %>
      </div>
    </div>
    <div class="row justify-content-center"  id="previewImages">
    </div>
  <input hidden class="photo_upload" name="post[images][]" id="images" type="file" multiple="true" accept="image/jpeg, image/tiff, image/png">
  <div class="row justify-content-end" style="margin-top: 9px;">
      <div class="col-2">
        <button class="PostFormButton">
          <%= image_tag "PictureUploadButton.png", style: "height:30px; width:30px;", id: "imagesUploader" %>
        </button>
    </div>
      <div class="col-2">
        <button class="PostFormButton">
          <img src="MusicButton.png">
        </button>
      </div>
      <div class="col-3">
        <button class="PostFormSubmitButton">
          Submit
        </button>
      </div>
    </div>
<% end %>

<script>
    var imagesCount = 0;
    var tmp_files = new Array();
    window.addEventListener('DOMContentLoaded',function () {

        document.getElementById("cancelPostModal").addEventListener("click", function(){
            document.getElementById("post_content").value = "";
            if(document.getElementById("previewImages").contains(document.getElementById('images1'))){
               document.getElementById("previewImages").removeChild(document.getElementById("images1"));
            }
           console.log("closed");
        });
        document.getElementById("post_content").addEventListener("onkeypress", function (event) {
            console.log("ds");
        });
        document.getElementById("imagesUploader").addEventListener("click", function (event) {
            event.preventDefault();
            $("#images").trigger("click");
            event.preventDefault();
        });
        var _URL = window.URL || window.webkitURL;

        var reader = new FileReader();
        var img = new Image();
        var resolution;
        var objectUrl;
        var x;
        var style;
        $("#images").change(function (event) {
            var files = document.getElementById("images").files;
            for (var i = 0; i < files.length; i++)
            {
                imagesCount =+ 1;
                tmp_files.push(files[i]);
                console.log("tmp_files length: " + tmp_files.length);
                console.log(files[i].name);
                objectUrl = _URL.createObjectURL(files[i]);
                reader.onload = function(e) {
                    var col = document.createElement('div');
                    col.setAttribute('class', "col");
                    document.getElementById("previewImages").appendChild(col);
                    x = document.createElement("IMG");
                    style = "height:" + 100 + "px; width: " + 100 + "px; display: inline-block;" ;
                    x.setAttribute('src', e.target.result);
                    x.setAttribute("style", style);
                    var cancel = document.createElement("span");
                    cancel.setAttribute('style', "background-color: red; height: 30px; width: 30px; position: absolute;");
                    cancel.setAttribute("onclick", "removeImage(this)");
                    document.getElementById("previewImages").lastChild.appendChild(cancel);
                    document.getElementById("previewImages").lastChild.appendChild(x);
                }
                reader.readAsDataURL(files[i]); // convert to base64 string
            }
        });

        var textarea = document.querySelector('textarea');

        textarea.addEventListener('keydown', autosize);

        function autosize() {
            var el = this;
            setTimeout(function () {
                el.style.cssText = 'height:auto;';
                // for box-sizing other than "content-box" use:
                // el.style.cssText = '-moz-box-sizing:content-box';
                el.style.cssText = 'height:' + (el.scrollHeight + 10) + 'px';
            }, 0);
        }
    });
    function removeImage(i){
        var col = i.parentNode;
        var colParent = col.parentNode;
        console.log(colParent);
        var colIndex = Array.prototype.indexOf.call(colParent.children, col);
        console.log(colIndex);
        imagesCount -= 1;
        tmp_files.splice(colIndex, 1);
        document.getElementById("previewImages").removeChild(col);
    }

</script>
